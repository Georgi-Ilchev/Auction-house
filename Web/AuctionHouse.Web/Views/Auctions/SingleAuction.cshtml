@model SingleAuctionViewModel
@{
    this.ViewData["Title"] = @Model.Name;
}

@if (this.TempData.ContainsKey("Message"))
{
    <partial name="_AlertPartial" />
}

@{
    var userBalance = this.ViewBag.UserBalance;
    var supportingBids = this.ViewBag.SupportingBids;
}

<h1 class="text-info text-monospace mt-3">@this.ViewData["Title"]</h1>
<hr />

<div class="container">
    <div class="row">
        <div class="col-md-6">
            <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
                <ol class="carousel-indicators">
                    <li data-target="#carouselExampleIndicators" data-slide-to="0" class="active"></li>
                    <li data-target="#carouselExampleIndicators" data-slide-to="1"></li>
                    <li data-target="#carouselExampleIndicators" data-slide-to="2"></li>
                </ol>
                <div class="carousel-inner">
                    <div class="carousel-item active">
                        <img src="@Model.Images" class="d-block w-100" alt="...">
                    </div>
                    <div class="carousel-item">
                        <img src="@Model.Images" class="d-block w-100" alt="...">
                    </div>
                    <div class="carousel-item">
                        <img src="@Model.Images" class="d-block w-100" alt="...">
                    </div>
                </div>
                <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="sr-only">Previous</span>
                </a>
                <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="sr-only">Next</span>
                </a>
            </div>
        </div>
        <div class="col-md-6">
            <div class="row">
                <div class="col-md-12">
                    <h1>@Model.Name</h1>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12 text-primary">
                    <span class="label label-primary">By: </span>
                    <span class="monospaced">@Model.UserUserName</span>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <p class="category">Category: @Model.CategoryName</p>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <p class="timestamp">@Model.Description</p>
                </div>
            </div>
            <hr />
            <div class="row">
                <div class="col-md-12">
                    <p class="description">Created on: @Model.CreatedOnAsString</p>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <p class="description">Active to: @Model.ActiveToAsString</p>
                </div>
            </div>

            @{
                var status = string.Empty;
                var activeOrNo = string.Empty;
                if (this.Model.IsActive == true)
                {
                    status = "Active";
                    activeOrNo = "text-success";
                }
                else
                {
                    status = "Inactive";
                    activeOrNo = "text-danger";
                }

                var isSold = string.Empty;
                if (this.Model.IsActive == false && this.Model.IsSold == true)
                {
                    isSold = "Sold!";
                }
                else if (this.Model.IsActive == false && this.Model.IsSold == false)
                {
                    isSold = "No buyer was found for this auction";
                }
            }

            <div class="row">
                <div class="col-md-12">
                    <p class="description">Status: <span class="@activeOrNo">@status</span></p>
                </div>
            </div>

            @if (this.Model.IsActive == false)
            {
                <hr />
                <div class="row">
                    <div class="col-md-12">
                        <p class="description h5 text-center">@isSold</p>
                    </div>
                </div>
            }

            @{
                Model.BidsAmount = Model.BidsAmount + Model.Price;
                if (Model.LastBidder == null)
                {
                    Model.LastBidder = "No bids yet";
                }

            }

            <ul class="list-group">
                <li class="list-group-item"><span class="font-weight-bold">Starting price - </span>$@Model.Price</li>
                <li class="list-group-item"><span class="font-weight-bold">Current price - <span class="font-weight-normal" id="currentBidValue">$@Model.BidsAmount.ToString("0.00")</span></span></li>
                <li class="list-group-item"><span class="font-weight-bold">Highest bidder - <span class="font-weight-normal" id="lastBidder">@Model.LastBidder</span></span></li>
            </ul>

            <hr />

            @{
                var userId = this.User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier).Value;
                var userEmail = this.User.FindFirst(System.Security.Claims.ClaimTypes.Email).Value;

                if (userId == this.Model.UserId)
                {
                    if (this.Model.LastBidder == "No bids yet")
                    {
                        <td>
                            <a class="btn btn-block btn-light text-white mb-3" asp-action="Edit" asp-route-Id="@Model.Id">Edit Auction</a>
                            <a class="btn btn-block btn-primary text-white mb-3" asp-controller="Comments" asp-action="Comment" asp-route-Id="@Model.Id">Comments</a>
                            <form method="post" id="deleteForm" asp-action="Delete" asp-route-auctionId="@Model.Id"></form>
                            <a class="btn btn-block btn-danger text-white mb-3" data-toggle="modal" data-target="#deleteModal">Delete Auction</a>
                        </td>
                    }
                    else
                    {
                        <td>
                            <a class="btn btn-block btn-light text-white mb-3" asp-action="Edit" asp-route-Id="@Model.Id">Edit Auction</a>
                            <a class="btn btn-block btn-primary text-white mb-3" asp-controller="Comments" asp-action="Comment" asp-route-Id="@Model.Id">Comments</a>
                            <li class="d-block" tabindex="0" data-toggle="tooltip" title="You cannot delete the auction while there are bidders.">
                                <button class="btn btn-danger btn-block" style="pointer-events: none;" type="button" disabled>Delete Auction</button>
                            </li>
                        </td>
                    }
                }
                else
                {
                    if (this.Model.IsActive)
                    {
                        if (this.Model.CanUserBid)
                        {
                            <div class="form-group">
                                <label for="exampleFormControlInput1">Submit your Bid</label>
                                <ul>
                                    @*<li type="button" class="btn btn-success" data-vote="10">10</li>
                                        <li type="button" class="btn btn-success" data-vote="20">20</li>
                                        <li type="button" class="btn btn-success" data-vote="50">50</li>
                                        <li type="button" class="btn btn-success" data-vote="100">100</li>
                                        <li type="button" class="btn btn-success" data-vote="200">200</li>
                                        <li type="button" class="btn btn-success" data-vote="300">300</li>
                                        <li type="button" class="btn btn-success" data-vote="500">500</li>
                                        <li type="button" class="btn btn-success" data-vote="1000">1000</li>
                                        <li type="button" class="btn btn-success" data-vote="3000">3000</li>
                                        @if (userBalance >= 5000)
                                        {
                                            <li type="button" class="btn btn-success" data-vote="5000">5000</li>
                                            userBalance -= 5000;
                                        }
                                        else
                                        {
                                            <li class="d-inline-block" tabindex="0" data-toggle="tooltip" title="You dont have enough money">
                                                <button class="btn btn-primary" style="pointer-events: none;" type="button" disabled>5000</button>
                                            </li>
                                        }*@

                                    @*new*@
                                    @for (int i = 0; i < supportingBids.Length; i++)
                                    {
                                        var currentBid = supportingBids[i];

                                        @if (userBalance >= currentBid + this.Model.BidsAmount)
                                        {
                                            <li type="button" class="btn btn-success" data-vote=@(currentBid)>@(currentBid)</li>
                                        }
                                        else
                                        {
                                            <li class="d-inline-block" tabindex="0" data-toggle="tooltip" title="You dont have enough money">
                                                <button class="btn btn-primary" style="pointer-events: none;" type="button" disabled>@(currentBid)</button>
                                            </li>
                                        }
                                    }

                                </ul>
                            </div>
                        }
                        else
                        {
                            <symbol id="exclamation-triangle-fill" fill="currentColor" viewBox="0 0 16 16">
                                <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z" />
                            </symbol>
                            <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Danger:"><use xlink:href="#exclamation-triangle-fill" /></svg>
                            <div class="alert alert-info">
                                <button type="button" class="btn" data-bs-dismiss="alert"></button>
                                <strong>Ops!</strong> Looks like you dont have enough money to make bid.
                            </div>
                        }
                    }
                    else if (this.Model.IsActive == false && userEmail == this.Model.LastBidder)
                    {
                        if (this.Model.IsPaid == true)
                        {
                            <div class="alert alert-success d-flex align-items-center" role="alert">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="check check-circle-fill flex-shrink-0 me-2" viewBox="0 0 16 16" role="img" aria-label="Warning:">
                                    <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z" />
                                </svg>
                                <div>
                                    <strong>Congratulations!</strong> You won this auction.
                                </div>
                            </div>
                        }
                        else
                        {
                            <form method="post" id="payForm" asp-action="MoneyTransfer" asp-route-auctionId="@Model.Id"></form>
                            <a class="btn btn-block btn-success text-white mb-3" data-toggle="modal" data-target="#payModal">Claim!</a>
                        }
                    }
                    <a class="btn btn-block btn-primary text-white mb-3" asp-controller="Comments" asp-action="Comment" asp-route-Id="@Model.Id">Comments</a>
                }
            }
        </div>
    </div>
</div>

<form method="post" id="antiForgeryForm"></form>
@section Scripts {
    <script>
                $("li[data-vote]").each(function (el) {
                    $(this).click(function () {
                        var bidding = $(this).attr("data-vote");
                        var auctionId = @Model.Id;
                        var antiForgeryToken = $('#antiForgeryForm input[name=__RequestVerificationToken]').val();
                        var data = { auctionId: auctionId, bidding: bidding };
                        var sign = '$';
                        var digits = '.00';

                        $.ajax({
                            type: "POST",
                            url: "/api/Bids",
                            data: JSON.stringify(data),
                            headers: {
                                'X-CSRF-TOKEN': antiForgeryToken
                            },
                            success: function (data) {
                                $('#currentBidValue').html(sign + (data.currentBid + @Model.Price) + digits);
                                $('#lastBidder').html(data.lastBidder);
                            },
                            contentType: 'application/json',
                        });
                    })
                });
    </script>
}

<!-- Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Comments</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Do you want to delete this auction?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-danger" onclick="deleteForm.submit()">Delete</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="payModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Pay</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Pay to owner - $@(this.Model.BidsAmount)
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-danger" onclick="payForm.submit()">Pay</button>
            </div>
        </div>
    </div>
</div>
