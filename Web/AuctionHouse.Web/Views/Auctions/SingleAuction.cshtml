@model SingleAuctionViewModel
@{
    this.ViewData["Title"] = @Model.Name;
}

@if (this.TempData.ContainsKey("Message"))
{
    <partial name="_AlertPartial" />
}

@{
    var staticBalance = this.ViewBag.Balance;
    var userBalance = this.ViewBag.VirtualBalance;
    var supportingBids = this.ViewBag.SupportingBids;
    var userBidsSum = this.ViewBag.UserBidsSum;
    var userId = this.User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier).Value;
    var userEmail = this.User.FindFirst(System.Security.Claims.ClaimTypes.Email).Value;
}

<h1 class="text-info text-monospace mt-3 ml-5">@this.ViewData["Title"]</h1>
<hr />

<div class="container">
    <div class="row">
        <div class="col-md-6">
            <div id="carouselExampleIndicators" class="carousel slide" data-interval="false" data-ride="carousel">
                <ol class="carousel-indicators">
                    @for (var i = 1; i <= this.Model.Images.Count(); i++)
                    {
                        <li data-target="#carouselExampleIndicators" data-slide-to="@i" @(i == 1 ? "class='active'" : "")></li>
                    }
                </ol>
                <div class="carousel-inner">
                    @{ var counter = 1;}
                    @foreach (var image in Model.Images)
                    {
                        var id = image.Id;
                        var extension = image.Extension;

                        var imageUrl = "/images/auctions/" + id + "." + extension;

                        <div class="carousel-@(counter == 1 ? "item active" : "item")">
                            <img src="@imageUrl" class="d-block w-100" alt="..." style="height: 500px;">
                        </div>

                        counter++;
                    }
                </div>
                <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="sr-only">Previous</span>
                </a>
                <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="sr-only">Next</span>
                </a>
            </div>
        </div>

        <div class="col-md-6">
            <div class="row">
                <div class="col-md-12">
                    <h1>@Model.Name</h1>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12 text-primary">
                    <span class="label label-primary">By: </span>
                    <span class="monospaced">@Model.UserUserName</span>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <p class="category">Category: @Model.CategoryName</p>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <p class="timestamp">@Model.Description</p>
                </div>
            </div>
            <hr />
            <div class="row">
                <div class="col-md-12">
                    <p class="description">Created on: @Model.CreatedOnAsString</p>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <p class="description">Active to: @Model.ActiveToAsString</p>
                </div>
            </div>

            @{
                var status = string.Empty;
                var activeOrNo = string.Empty;
                if (this.Model.IsActive == true)
                {
                    status = "Active";
                    activeOrNo = "text-success";
                }
                else
                {
                    status = "Inactive";
                    activeOrNo = "text-danger";
                }

                var isSold = string.Empty;
                if (this.Model.IsActive == false && this.Model.IsSold == true)
                {
                    isSold = "Sold!";
                }
                else if (this.Model.IsActive == false && this.Model.IsSold == false)
                {
                    isSold = "No buyer was found for this auction";
                }
            }

            <div class="row">
                <div class="col-md-12">
                    <p class="description">Status: <span class="@activeOrNo">@status</span></p>
                </div>
            </div>

            @if (this.Model.IsActive == false)
            {
                <hr />
                <div class="row">
                    <div class="col-md-12">
                        <p class="description h5 text-center">@isSold</p>
                    </div>
                </div>
            }

            @{
                if (Model.LastBidder == null)
                {
                    Model.LastBidder = "No bids yet";
                }
            }

            <ul class="list-group">
                <li class="list-group-item"><span class="font-weight-bold">Starting price - </span>$@Model.Price</li>
                <li class="list-group-item"><span class="font-weight-bold">Current price - <span class="font-weight-normal" id="currentPrice">$@Model.CurrentPrice</span></span></li>
                <li class="list-group-item"><span class="font-weight-bold">Highest bidder - <span class="font-weight-normal" id="lastBidder">@Model.LastBidder</span></span></li>
            </ul>

            <hr />

            @{
                if (userId == this.Model.UserId)
                {
                    if (this.Model.LastBidder == "No bids yet")
                    {
                        <td>
                            <a class="btn btn-block btn-light text-white mb-2" asp-action="Edit" asp-route-Id="@Model.Id">Edit Auction</a>
                            <a class="btn btn-block btn-primary text-white mb-3" asp-controller="Comments" asp-action="All" asp-route-auctionId="@Model.Id">Comments</a>
                            <form method="post" id="deleteForm" asp-action="Delete" asp-route-auctionId="@Model.Id"></form>
                            <a class="btn btn-block btn-danger text-white mb-3" data-toggle="modal" data-target="#deleteModal">Delete Auction</a>
                        </td>
                    }
                    else
                    {
                        <td>
                            <a class="btn btn-block btn-light text-white mb-2" asp-action="Edit" asp-route-Id="@Model.Id">Edit Auction</a>
                            <a class="btn btn-block btn-primary text-white mb-3" asp-controller="Comments" asp-action="All" asp-route-auctionId="@Model.Id">Comments</a>
                            <li class="d-block" tabindex="0" data-toggle="tooltip" title="You cannot delete the auction while there are bidders.">
                                <button class="btn btn-danger btn-block" style="pointer-events: none;" type="button" disabled>Delete Auction</button>
                            </li>
                        </td>
                    }
                }
                else
                {
                    <li class="list-group-item"><span class="font-weight-bold">Balance - <span class="font-weight-normal">$@staticBalance</span></span></li>
                    <li class="list-group-item"><span class="font-weight-bold">Virtual balance - <span class="font-weight-normal" id="currentBalance">$@userBalance</span></span></li>
                    <li class="list-group-item"><span class="font-weight-bold">You are in with - <span class="font-weight-normal" id="bidsSum">$@userBidsSum.ToString("0.00")</span></span></li>

                    if (this.Model.IsActive)
                    {
                        if (this.Model.CanUserBid)
                        {
                            <div class="form-group mt-2">
                                <label class="ml-3" for="exampleFormControlInput1">Submit your Bid</label>
                                <ul>
                                    <div id="containerButtons">
                                        @for (int i = 0; i < supportingBids.Length; i++)
                                        {
                                            var currentBid = supportingBids[i];

                                            @if (userBalance + userBidsSum >= currentBid + this.Model.CurrentPrice)
                                            {
                                                <li type="button" id="bid" class="btn btn-success" data-vote="@(currentBid)">@(currentBid)</li>
                                            }
                                            else
                                            {
                                                <li class="d-inline-block" tabindex="0" data-toggle="tooltip" title="You dont have enough money">
                                                    <button class="btn btn-outline-light" id="bid" style="pointer-events: none;" type="button" disabled>@(currentBid)</button>
                                                </li>
                                            }
                                        }
                                    </div>
                                </ul>
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-warning d-flex align-items-center mt-3 mb-0" role="alert">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="check check-circle-fill flex-shrink-0 me-2" viewBox="0 0 16 16" role="img" aria-label="Warning:">
                                    <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z" />
                                </svg>
                                <div>
                                    <strong>Money problem!</strong> Looks like you dont have enough money to make bid.
                                </div>
                            </div>
                        }
                    }
                    else if (this.Model.IsActive == false && userEmail == this.Model.LastBidder)
                    {
                        if (this.Model.IsPaid == true)
                        {
                            <div class="alert alert-success d-flex align-items-center mt-3 mb-0" role="alert">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="check check-circle-fill flex-shrink-0 me-2" viewBox="0 0 16 16" role="img" aria-label="Warning:">
                                    <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z" />
                                </svg>
                                <div>
                                    <strong>Congratulations!</strong> You won this auction.
                                </div>
                            </div>
                        }
                        else
                        {
                            <form method="post" id="payForm" asp-action="MoneyTransfer" asp-route-auctionId="@Model.Id"></form>
                            <a class="btn btn-block btn-success text-white mb-0 mt-3" data-toggle="modal" data-target="#payModal">Claim!</a>
                        }
                    }
                    <a class="btn btn-block btn-primary text-white mb-3 mt-3" asp-controller="Comments" asp-action="All" asp-route-auctionId="@Model.Id">Comments</a>
                }
            }
        </div>
    </div>
</div>

<form method="post" id="antiForgeryForm"></form>
@section Scripts {
    <script>
        var auctionId = @Model.Id;
        auctionId = auctionId.toString();

        var connection = new signalR
            .HubConnectionBuilder()
            .withUrl("/bidHub")
            .build();

        connection.start().then(res => {
            connection.invoke("JoinGroup", auctionId)
                .catch(err => console.log(err));
        }).catch (function (err) {
            return console.error(err.toString());
        });

                $("li[data-vote]").each(function (el) {
                    $(this).click(function () {
                        var bidding = $(this).attr("data-vote");
                        var auctionId = @Model.Id;
                        var antiForgeryToken = $('#antiForgeryForm input[name=__RequestVerificationToken]').val();
                        var data = { auctionId: auctionId, bidding: bidding };
                        var sign = '$';
                        var digits = '.00';
                        var startPrice = @this.Model.Price;
                        data.virtualBalance = @userBalance;
                        data.currentPrice = @this.Model.CurrentPrice;

                        var containerAsArray = Array.from(containerButtons.children);

                        $.ajax({
                            type: "POST",
                            url: "/api/Bids",
                            data: JSON.stringify(data),
                            headers: {
                                'X-CSRF-TOKEN': antiForgeryToken
                            },
                            success: function (data) {
                                var result = $('#currentPrice').html(sign + (data.currentPrice) + digits);
                                $('#lastBidder').html(data.lastBidder);
                                $('#currentBalance').text(sign + data.virtualBalance + digits);
                                $('#bidsSum').html(sign + (data.userbidsAmount) + digits);

                                checkButtons(containerAsArray, data.virtualBalance, data.currentPrice, data.userbidsAmount, startPrice);
                            },
                            contentType: 'application/json',
                        })
                    })
                });

        connection.on("RefreshBids", function (currentBid, lastBidder) {
            document.getElementById("currentPrice").textContent = `$${currentBid}`;
            document.getElementById("lastBidder").textContent = `${lastBidder}`;
        });

        //connection.invoke("RefreshBids", JSON.stringify(currentBid), JSON.stringify(lastBidder)).catch(function (err) {
        //    return console.error(err.toString());
        //});
        //event.preventDefault();

    </script>

    <script type="text/javascript">
        function checkButtons(containerAsArray, currentBalance, currentPrice, userBidsSum) {
            containerAsArray.map((element) => {
                let currElement = Number(element.textContent);
                let virtualBalance = Number(currentBalance);

                if (virtualBalance + userBidsSum < currentPrice + currElement) {
                    element.className += " disabled";
                }
            });
        }
    </script>
}

<!-- Delete Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Comments</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Do you want to delete this auction?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-danger" onclick="deleteForm.submit()">Delete</button>
            </div>
        </div>
    </div>
</div>

<!-- Pay Modal -->
<div class="modal fade" id="payModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Pay</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Pay to owner - $@(this.Model.CurrentPrice)
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-danger" onclick="payForm.submit()">Pay</button>
            </div>
        </div>
    </div>
</div>
